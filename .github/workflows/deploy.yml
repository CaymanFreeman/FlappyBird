name: Build and Deploy
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install WASM Bindgen
        run: cargo install wasm-bindgen-cli

      - name: Install and Setup WASM Optimizer
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/WebAssembly/binaryen/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
          curl -L "https://github.com/WebAssembly/binaryen/releases/download/${LATEST_VERSION}/binaryen-${LATEST_VERSION}-x86_64-linux.tar.gz" | tar xz
          echo "$PWD/binaryen-${LATEST_VERSION}/bin" >> $GITHUB_PATH

      - name: Cargo Build
        run: |
          cargo build --profile wasm-release --target wasm32-unknown-unknown

      - name: Generate JavaScript Bindings
        run: |
          wasm-bindgen --no-typescript --target web \
          --out-dir ./out/ \
          --out-name "flappy_bird" \
          ./target/wasm32-unknown-unknown/release/flappy_bird.wasm

      - name: Optimize Binary
        run: |
          wasm-opt -Oz -o ./out/flappy_bird_opt.wasm ./out/flappy_bird_bg.wasm
          mv ./out/flappy_bird_opt.wasm ./out/flappy_bird_bg.wasm

      - name: Prepare Deployment Directory
        run: |
          cp -r assets ./out/
          cp -r web/* ./out/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
